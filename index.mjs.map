{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isPositiveNumber = require( '@stdlib/assert-is-positive-number' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\nvar pow = require( '@stdlib/math-base-special-pow' );\n\n\n// VARIABLES //\n\nvar DEFAULT_BASE = 10;\nvar DEFAULT_LEN = 100;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers on a log scale.\n*\n* @param {number} start - exponent of starting value (inclusive)\n* @param {number} stop - exponent of stopping value (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @param {Options} [options] - function options\n* @param {PositiveNumber} [options.base=10] - base of log space\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} `N` argument must be a nonnegative integer\n* @throws {TypeError} `options` argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterLogspace( 0, 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 10\n*\n* v = iter.next().value;\n* // returns 100\n*\n* // ...\n*/\nfunction iterLogspace( start, stop, N, options ) {\n\tvar step;\n\tvar iter;\n\tvar FLG;\n\tvar b;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( '0CZ4M', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( '0CZ4N', stop ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( N ) ) {\n\t\t\tn = N;\n\t\t\tb = DEFAULT_BASE;\n\t\t} else if ( isPlainObject( N ) ) {\n\t\t\tn = DEFAULT_LEN;\n\t\t\tif ( hasOwnProp( N, 'base' ) ) {\n\t\t\t\tif ( !isPositiveNumber( N.base ) ) {\n\t\t\t\t\tthrow new TypeError( format( '0CZ4Q', 'base', N.base ) );\n\t\t\t\t}\n\t\t\t\tb = N.base;\n\t\t\t} else {\n\t\t\t\tb = DEFAULT_BASE;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError( format( '0CZ4R', N ) );\n\t\t}\n\t} else if ( arguments.length >= 4 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( '0CZ2y', N ) );\n\t\t}\n\t\tn = N;\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( '0CZ4G', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'base' ) ) {\n\t\t\tif ( !isPositiveNumber( options.base ) ) {\n\t\t\t\tthrow new TypeError( format( '0CZ4Q', 'base', options.base ) );\n\t\t\t}\n\t\t\tb = options.base;\n\t\t} else {\n\t\t\tb = DEFAULT_BASE;\n\t\t}\n\t} else {\n\t\tn = DEFAULT_LEN;\n\t\tb = DEFAULT_BASE;\n\t}\n\td = n - 1;\n\tstep = (stop-start) / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, start ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, stop ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': pow( b, (i*step)+start ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLogspace( start, stop, n, {\n\t\t\t'base': b\n\t\t});\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLogspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced numbers on a log scale.\n*\n* @module @stdlib/iter-logspace\n*\n* @example\n* var iterLogspace = require( '@stdlib/iter-logspace' );\n*\n* var iter = iterLogspace( 0, 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 10\n*\n* v = iter.next().value;\n* // returns 100\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n"],"names":["setReadOnly","require$$0","isNumber","require$$1","isPrimitive","isnan","require$$2","isNonNegativeInteger","require$$3","isPositiveNumber","require$$4","isPlainObject","require$$5","hasOwnProp","require$$6","iteratorSymbol","require$$7","format","require$$8","pow","require$$9","main","iterLogspace","start","stop","N","options","step","iter","FLG","b","n","d","i","TypeError","arguments","length","base","next","end","factory","done","value","lib"],"mappings":";;y5BAsBA,IAAIA,EAAcC,EACdC,EAAWC,EAAsCC,YACjDC,EAAQC,EACRC,EAAuBC,EAAmDJ,YAC1EK,EAAmBC,EAA+CN,YAClEO,EAAgBC,EAChBC,EAAaC,EACbC,EAAiBC,EACjBC,EAASC,EACTC,EAAMC,EA8KV,IAAAC,EAtIA,SAASC,EAAcC,EAAOC,EAAMC,EAAGC,GACtC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAM/B,EAAUqB,IAAWlB,EAAOkB,GACjC,MAAM,IAAIW,UAAWjB,EAAQ,QAASM,IAEvC,IAAMrB,EAAUsB,IAAUnB,EAAOmB,GAChC,MAAM,IAAIU,UAAWjB,EAAQ,QAASO,IAEvC,GAA0B,IAArBW,UAAUC,OACd,GAAK7B,EAAsBkB,GAC1BM,EAAIN,EACJK,EArDgB,OAsDV,CAAA,IAAKnB,EAAec,GAW1B,MAAM,IAAIS,UAAWjB,EAAQ,QAASQ,IATtC,GADAM,EAtDe,IAuDVlB,EAAYY,EAAG,QAAW,CAC9B,IAAMhB,EAAkBgB,EAAEY,MACzB,MAAM,IAAIH,UAAWjB,EAAQ,QAAS,OAAQQ,EAAEY,OAEjDP,EAAIL,EAAEY,UAENP,EA9De,QAmEX,GAAKK,UAAUC,QAAU,EAAI,CACnC,IAAM7B,EAAsBkB,GAC3B,MAAM,IAAIS,UAAWjB,EAAQ,QAASQ,IAGvC,GADAM,EAAIN,GACEd,EAAee,GACpB,MAAM,IAAIQ,UAAWjB,EAAQ,QAASS,IAEvC,GAAKb,EAAYa,EAAS,QAAW,CACpC,IAAMjB,EAAkBiB,EAAQW,MAC/B,MAAM,IAAIH,UAAWjB,EAAQ,QAAS,OAAQS,EAAQW,OAEvDP,EAAIJ,EAAQW,UAEZP,EAjFgB,QAoFjBC,EAnFgB,IAoFhBD,EArFiB,GAoGlB,OAZAH,GAAQH,EAAKD,IADbS,EAAID,EAAI,GAERE,GAAK,EAILjC,EADA4B,EAAO,GACY,OAAQU,GAC3BtC,EAAa4B,EAAM,SAAUW,GAGxBxB,GACJf,EAAa4B,EAAMb,EAAgByB,GAE7BZ,EAQP,SAASU,IAER,OADAL,GAAK,EACAJ,GAAOI,GAAKF,EACT,CACNU,MAAQ,GAGC,IAANR,EACG,CACNS,MAASvB,EAAKW,EAAGP,GACjBkB,MAAQ,GAGLR,IAAMD,EACH,CACNU,MAASvB,EAAKW,EAAGN,GACjBiB,MAAQ,GAGH,CACNC,MAASvB,EAAKW,EAAIG,EAAEN,EAAMJ,GAC1BkB,MAAQ,GAWV,SAASF,EAAKG,GAEb,OADAb,GAAM,EACDM,UAAUC,OACP,CACNM,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASD,IACR,OAAOlB,EAAcC,EAAOC,EAAMO,EAAG,CACpCM,KAAQP,MCpJXa,EALe1C"}