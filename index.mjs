// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.1.0-esm/index.mjs";function l(u,p,b,v){var h,j,g,f,c,w,x;if(!t(u)||s(u))throw new TypeError(m("invalid argument. First argument must be a number. Value: `%s`.",u));if(!t(p)||s(p))throw new TypeError(m("invalid argument. Second argument must be a number. Value: `%s`.",p));if(3===arguments.length)if(n(b))c=b,f=10;else{if(!i(b))throw new TypeError(m("invalid argument. Third argument must be either a nonnegative integer or an object. Value: `%s`.",b));if(c=100,o(b,"base")){if(!r(b.base))throw new TypeError(m("invalid option. `%s` option must be a positive number. Option: `%s`.","base",b.base));f=b.base}else f=10}else if(arguments.length>=4){if(!n(b))throw new TypeError(m("invalid argument. Third argument must be a nonnegative integer. Value: `%s`.",b));if(c=b,!i(v))throw new TypeError(m("invalid argument. Fourth argument must be an object. Value: `%s`.",v));if(o(v,"base")){if(!r(v.base))throw new TypeError(m("invalid option. `%s` option must be a positive number. Option: `%s`.","base",v.base));f=v.base}else f=10}else c=100,f=10;return h=(p-u)/(w=c-1),x=-1,e(j={},"next",y),e(j,"return",T),a&&e(j,a,E),j;function y(){return x+=1,g||x>=c?{done:!0}:0===x?{value:d(f,u),done:!1}:x===w?{value:d(f,p),done:!1}:{value:d(f,x*h+u),done:!1}}function T(e){return g=!0,arguments.length?{value:e,done:!0}:{done:!0}}function E(){return l(u,p,c,{base:f})}}export{l as default};
//# sourceMappingURL=index.mjs.map
